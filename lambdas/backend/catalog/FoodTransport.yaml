---
swagger: "2.0"
info:
  description: |
    SOAP web service that provides access to food composition data collected by EU project EuroFIR. See the PDF documentation for more information on syntax and allowed requests.

    The accompanied PDF mentions that the content of a request should include an API user ID and a signature made with a secret key. The API user ID is the literal `quisper` and the secret key is the literal `e_x|p1nic}fkFg~0oikxoo"$>*2jtPO@|Z@!o^I?`. An example POST request could be
    ```
    <?xml version="1.0" encoding="utf-8" ?>
    <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
      <soap:Header></soap:Header>
      <soap:Body>
        <GetContentInformation xmlns="http://eurofir.webservice.namespace">
          <api_permission>uk</api_permission>
          <api_userid>quisper</api_userid>
          <fdql_sentence><![CDATA[<?xml version="1.0" encoding="UTF-8"?><FDQL_Sentence><MetaData><SchemaVersion>1.2</SchemaVersion><Schema>EuroFIR_Web_Service_FDQL_Sentence_version_1_2.xsd</Schema></MetaData><SelectClause><FieldName>Content</FieldName></SelectClause></FDQL_Sentence>]]></fdql_sentence>
          <version>1.2</version>
          <api_signature>e61ae60dca26a29fb379a0b21f57b6e840f4a2e9</api_signature>
        </GetContentInformation>
      </soap:Body>
    </soap:Envelope>
    ```

    See the PDF for operations other than GetContentInformation.
  version: "1.0.0"
  title: "EuroFIR-FoodTransport"
host: "qsp-api.thehyve.net"
basePath: "/foodtransport/beta"
schemes:
- "https"
paths:
  /food-transport:
    get:
      description: "Retrieve the WSDL specification of the EuroFIR Food Transport\
        \ SOAP service."
      produces:
      - "text/xml"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
    post:
      description: "Execute a SOAP request on the EuroFIR Food Transport SOAP service.\
        \ See the PDF documentation on the developer portal for more information."
      consumes:
      - 'text/xml'
      produces:
      - "text/xml"
      - "application/json"
      parameters:
      - in: body
        name: SOAP
        schema:
          type: "object"
      - name: "Content-Type"
        in: "header"
        description: 'Mediatype that supports SOAP XML, e.g. text/xml.'
        required: true
        type: "string"
      - name: "Accept"
        in: "header"
        description: 'Mediatype that includes text/xml.'
        required: true
        type: "string"
      responses:
        200:
          description: "Response data for the service."
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        500:
          description: "Request failed."
        401:
          description: "Unauthorized: no API key was provided."
          examples:
            application/json: '{"message": "No API key was provided"}'
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden: API key was not authorized for this API."
          examples:
            application/json: '{"message": "API key not allowed"}'
          schema:
            $ref: "#/definitions/Error"
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  Error:
    type: "object"
    properties:
      message:
        type: "string"
    title: "Error Schema"
externalDocs:
  description: "PDF documentation"
  url: /pdfs/FoodTransport.pdf
